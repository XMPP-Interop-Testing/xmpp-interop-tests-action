name: Openfire CI

env:
  CI: true
  OPENFIRE_VERSION_DOTS: "4.8.1"
  OPENFIRE_VERSION_DASHES: "4_8_1"

on: [push, pull_request]


jobs:
  run-action:

    name: Execute Github Action
    runs-on: ubuntu-latest

    steps:
      - name: Checkout local action
        uses: actions/checkout@v4
        with:
          path: self # different from the checkout done in the next step (which is otherwise overwritten).
      - name: Checkout actions (that are invoked in the 'startCIServer' and 'stopCIServer' steps) # Do this _before_ untarring the distribution, as the checkout will empty the directory prior to the checkout!
        uses: actions/checkout@v4
        with:
          repository: igniterealtime/Openfire
          ref: main # After Openfire v4.8.2, Replace with something like v${{ env.OPENFIRE_VERSION_DOTS }}
          path: tools # different from the checkout done in the previous step (which is otherwise overwritten).
          sparse-checkout: |
            .github
      - name: Download Openfire distribution
        run: |
          curl -L "https://github.com/igniterealtime/Openfire/releases/download/v${{ env.OPENFIRE_VERSION_DOTS }}/openfire_${{ env.OPENFIRE_VERSION_DASHES }}.tar.gz" -o distribution-artifact.tar.gz
      - name: untar distribution # sharing artifacts that consist of many files can be slow. Share one file instead.
        run: tar -xf distribution-artifact.tar.gz
      - name: Start CI server from distribution
        id: startCIServer
        uses: ./tools/.github/actions/startserver-action
        with:
          distBaseDir: 'openfire'
      - name: Run the action that's developed in this repository
        uses: ./self/
        with:
          domain: 'example.org'
          adminAccountUsername: 'admin'
          adminAccountPassword: 'admin'
          disabledTests: 'EntityCapsTest,SoftwareInfoIntegrationTest,XmppConnectionIntegrationTest,StreamManagementTest,WaitForClosingStreamElementTest,IoTControlIntegrationTest,ModularXmppClientToServerConnectionLowLevelIntegrationTest'
          logDir: ./output
      - name: Upload XMPP debug logs as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: XMPP debug logs
          path: ./output
      - name: Stop CI server
        if: ${{ always() && steps.startCIServer.conclusion == 'success' }} # TODO figure out if this is correct. The intent is to have the server stopped if it was successfully started, even if the tests fail. Failing tests should still cause the job to fail.
        uses: ./tools/.github/actions/stopserver-action