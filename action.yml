name: 'XMPP Interoperability Tests'
description: 'Verifies functional behavior of an XMPP server by executing interoperability tests.'
inputs:
  host:
    description: 'IP address or DNS name of the XMPP service to run the tests on.'
    required: true
    default: '127.0.0.1'
  domain:
    description: 'XMPP domain name of server under test.'
    required: true
    default: 'example.org'
  timeout:
    description: 'Amount of milliseconds after which an XMPP action (typically an IQ request) is considered timed out.'
    required: false
    default: '5000'
  adminAccountUsername:
    description: 'Account name of a pre-existing user that is allowed to create other users, per XEP-0133. If not provided, In-band registration (XEP-0077) will be used.'
    required: false
  adminAccountPassword:
    description: 'Password for the admin account.'
    required: false
  disabledSpecifications:
    description: 'Comma-separated list of specifications for which tests are to be skipped (eg: "XEP-0045,XEP-0060")'
    required: false
  disabledTests:
    description: 'Comma-separated list of tests that are to be skipped (eg: "EntityCapsTest,SoftwareInfoIntegrationTest")'
    required: false
  enabledSpecifications:
    description: 'Comma-separated list of specifications for which tests are to be run (eg: "XEP-0045,XEP-0060")'
    required: false
  enabledTests:
    description: 'Comma-separated list of tests that are to be run (eg: "EntityCapsTest,SoftwareInfoIntegrationTest")'
    required: false
  logDir:
    description: 'The directory in which the test output and logs are to be stored. This directory will be created, if it does not already exist.'
    required: false
    default: './output'

branding:
  icon: 'book-open'
  color: 'orange'

runs:
  using: "composite"
  steps:
    - uses: actions/setup-java@v4
      with:
        java-version: 11
        distribution: zulu

    - uses: dsaltares/fetch-gh-release-asset@1.1.2
      with:
        repo: 'XMPP-Interop-Testing/smack-sint-server-extensions'
        version: 'tags/v1.6.1'
        file: 'smack-sint-server-extensions-1.6.1-jar-with-dependencies.jar'

    - run: |
          JAVACMD=()
          JAVACMD+=("java")
          JAVACMD+=("-Dsinttest.service=${{ inputs.domain }}")
          JAVACMD+=("-Dsinttest.host=${{ inputs.host }}")
          JAVACMD+=("-Dsinttest.securityMode=disabled")
          JAVACMD+=("-Dsinttest.replyTimeout=${{ inputs.timeout }}")

          if [ "${{ inputs.adminAccountUsername }}" != "" ]; then
            JAVACMD+=("-Dsinttest.adminAccountUsername=${{ inputs.adminAccountUsername }}")
          fi
          if [ "${{ inputs.adminAccountPassword }}" != "" ]; then
            JAVACMD+=("-Dsinttest.adminAccountPassword=${{ inputs.adminAccountPassword }}")
          fi
          JAVACMD+=("-Dsinttest.enabledConnections=tcp")
          JAVACMD+=("-Dsinttest.dnsResolver=javax")
          if [ "${{ inputs.disabledSpecifications }}" != "" ]; then
              JAVACMD+=("-Dsinttest.disabledSpecifications=${{ inputs.disabledSpecifications }}")
          fi
          if [ "${{ inputs.disabledTests }}" != "" ]; then
              JAVACMD+=("-Dsinttest.disabledTests=${{ inputs.disabledTests }}")
          fi
          if [ "${{ inputs.enabledSpecifications }}" != "" ]; then
              JAVACMD+=("-Dsinttest.enabledSpecifications=${{ inputs.enabledSpecifications }}")
          fi
          if [ "${{ inputs.enabledTests }}" != "" ]; then
              JAVACMD+=("-Dsinttest.enabledTests=${{ inputs.enabledTests }}")
          fi
          JAVACMD+=("-Dsinttest.testRunResultProcessors=org.igniterealtime.smack.inttest.util.StdOutTestRunResultProcessor,org.igniterealtime.smack.inttest.util.JUnitXmlTestRunResultProcessor")
          JAVACMD+=("-Dsinttest.debugger=org.igniterealtime.smack.inttest.util.ModifiedStandardSinttestDebuggerMetaFactory")
          JAVACMD+=("-DlogDir=${{ inputs.logDir }}")
          JAVACMD+=("-jar")
          JAVACMD+=("smack-sint-server-extensions-1.6.1-jar-with-dependencies.jar")

          "${JAVACMD[@]}"
      shell: bash

    - name: Upload XMPP debug logs as an artifact
      if: always() # Especially when the tests fail, it's desirable to have access to these reports!
      uses: actions/upload-artifact@v4
      with:
        name: XMPP debug logs
        path: '${{ inputs.logDir }}'

    - name: Publish Test Report
      uses: mikepenz/action-junit-report@v4
      if: always() # always run even if the previous step fails
      with:
        report_paths: '${{ inputs.logDir }}/test-results.xml'
        suite_regex: '*'
        include_passed: false
        detailed_summary: true
        annotate_only: true
